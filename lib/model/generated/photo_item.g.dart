//This is autogenerated file. All changes will be lost after code generation.
import 'package:nsg_data/nsg_data.dart';
// ignore: unused_import
import 'dart:typed_data';
import '../data_controller_model.dart';

/// Картинки
class PhotoItemGenerated extends NsgDataItem {
  static const nameId = 'id';
  static const nameName = 'name';
  static const namePhoto = 'photo';
  static const nameOwnerId = 'ownerId';

  static final Map<String, String> fieldNameDict = {
 };

  @override
  String get typeName => 'PhotoItem';

  @override
  void initialize() {
    addField(NsgDataStringField(nameId), primaryKey: true);
    addField(NsgDataStringField(nameName), primaryKey: false);
    addField(NsgDataImageField(namePhoto), primaryKey: false);
    addField(NsgDataReferenceField<Event>(nameOwnerId), primaryKey: false);
  }

  @override
  String toString() => name;

  @override
  NsgDataItem getNewObject() => PhotoItem();

  /// Идентификатор
  @override
  String get id => getFieldValue(nameId).toString();

  @override
  set id(String value) => setFieldValue(nameId, value);

  /// Наименование
  String get name => getFieldValue(nameName).toString();

  set name(String value) => setFieldValue(nameName, value);

  /// Картинка
  List<int> get photo {
    return getFieldValue(namePhoto) as List<int>;
  }

  set photo(List<int> value) => setFieldValue(namePhoto, value);

  /// Владелец
  @override
  String get ownerId => getFieldValue(nameOwnerId).toString();
  Event get owner => getReferent<Event>(nameOwnerId);
  Future<Event> ownerAsync() async {
   return await getReferentAsync<Event>(nameOwnerId);
  }

  @override
  set ownerId(String value) => setFieldValue(nameOwnerId, value);
  set owner(Event value) =>
    setFieldValue(nameOwnerId, value.id);

  @override
  String get apiRequestItems {
    return '/Api/PhotoItem';
  }
}
