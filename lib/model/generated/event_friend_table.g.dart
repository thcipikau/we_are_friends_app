//This is autogenerated file. All changes will be lost after code generation.
import 'package:nsg_data/nsg_data.dart';
// ignore: unused_import
import 'dart:typed_data';
import '../data_controller_model.dart';

/// СправочникиМероприятияТаблицаУчастники.Строка
class EventFriendTableGenerated extends NsgDataItem {
  static const nameId = 'id';
  static const nameOwnerId = 'ownerId';
  static const nameFriendId = 'friendId';
  static const nameSumNeeded = 'sumNeeded';
  static const nameSumAcquired = 'sumAcquired';

  static final Map<String, String> fieldNameDict = {
   nameFriendId: 'Друг',
   nameSumNeeded: 'Друг',
   nameSumAcquired: 'Друг',
 };

  @override
  String get typeName => 'EventFriendTable';

  @override
  void initialize() {
    addField(NsgDataStringField(nameId), primaryKey: true);
    addField(NsgDataReferenceField<Event>(nameOwnerId), primaryKey: false);
    addField(NsgDataReferenceField<Friend>(nameFriendId), primaryKey: false);
    addField(NsgDataDoubleField(nameSumNeeded), primaryKey: false);
    addField(NsgDataDoubleField(nameSumAcquired), primaryKey: false);
    fieldList.fields[nameFriendId]?.presentation = 'Друг';
    fieldList.fields[nameSumNeeded]?.presentation = 'Друг';
    fieldList.fields[nameSumAcquired]?.presentation = 'Друг';
  }

  @override
  NsgDataItem getNewObject() => EventFriendTable();

  /// Идентификатор
  @override
  String get id => getFieldValue(nameId).toString();

  @override
  set id(String value) => setFieldValue(nameId, value);

  /// Владелец
  @override
  String get ownerId => getFieldValue(nameOwnerId).toString();
  Event get owner => getReferent<Event>(nameOwnerId);
  Future<Event> ownerAsync() async {
   return await getReferentAsync<Event>(nameOwnerId);
  }

  @override
  set ownerId(String value) => setFieldValue(nameOwnerId, value);
  set owner(Event value) =>
    setFieldValue(nameOwnerId, value.id);

  /// Друг
  String get friendId => getFieldValue(nameFriendId).toString();
  Friend get friend => getReferent<Friend>(nameFriendId);
  Future<Friend> friendAsync() async {
   return await getReferentAsync<Friend>(nameFriendId);
  }

  set friendId(String value) => setFieldValue(nameFriendId, value);
  set friend(Friend value) =>
    setFieldValue(nameFriendId, value.id);

  /// НеобходимаяСумма
  double get sumNeeded => getFieldValue(nameSumNeeded) as double;

  set sumNeeded(double value) => setFieldValue(nameSumNeeded, value);

  /// СданнаяСумма
  double get sumAcquired => getFieldValue(nameSumAcquired) as double;

  set sumAcquired(double value) => setFieldValue(nameSumAcquired, value);

  @override
  String get apiRequestItems {
    return '/Api/EventFriendTable';
  }
}
